AWSTemplateFormatVersion: "2010-09-09"
Description: "HPC Cluster CloudFormation Template"

Parameters:
  ClusterName:
    Description: "Name of the HPC cluster"
    Type: String

  HeadNodeInstanceType:
    Description: "EC2 instance type for the head node"
    Type: String
    Default: "c5.2xlarge"
    AllowedValues:
      - "c5.2xlarge"
      - "c5.4xlarge"
      # Add more instance types as needed

  ComputeNodeInstanceType:
    Description: "EC2 instance type for the compute nodes"
    Type: String
    Default: "c5n.large"
    AllowedValues:
      - "c5n.large"
      - "c5n.xlarge"
      # Add more instance types as needed

  ComputeNodeCount:
    Description: "Number of compute nodes"
    Type: Number
    Default: 0
    MinValue: 0
    MaxValue: 4

Resources:
  HeadNodeInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref HeadNodeInstanceType
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", Os]
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref IamInstanceProfile
      SecurityGroupIds:
        - !Ref HeadNodeSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -ex
          # Add your custom setup scripts for the head node here
          # For example, you can install HPC software, configure networking, etc.

  HeadNodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for the head node"
      VpcId: !Ref VpcId

  ComputeNodeAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MinSize: !Ref ComputeNodeCount
      MaxSize: !Ref ComputeNodeCount
      LaunchConfigurationName: !Ref ComputeNodeLaunchConfiguration
      VPCZoneIdentifier:
        - !Ref SubnetId
      Tags:
        - Key: Name
          Value: !Sub ${ClusterName}-ComputeNode
          PropagateAtLaunch: true

  ComputeNodeLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", Os]
      InstanceType: !Ref ComputeNodeInstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref ComputeNodeSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -ex
          # Add your custom setup scripts for the compute nodes here
          # For example, you can install HPC software, configure networking, etc.

  ComputeNodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for the compute nodes"
      VpcId: !Ref VpcId

  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref IamRole

  IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: "sts:AssumeRole"

  IamRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "IMDS-Security-Policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "ec2:DescribeInstances"
              - "ec2:DescribeInstanceAttribute"
            Resource: "*"
      Roles:
        - !Ref IamRole

Mappings:
  RegionMap:
    us-east-2:
      Os: "alinux2"
      # Add more OS mappings for other regions as needed

Outputs:
  ClusterHeadNodeIP:
    Description: "Public IP address of the HPC cluster head node"
    Value: !GetAtt HeadNodeInstance.PublicIp

  ClusterComputeNodeIPs:
    Description: "List of public IP addresses of the HPC cluster compute nodes"
    Value: !Join [",", !GetAtt ComputeNodeAutoScalingGroup.Instances]

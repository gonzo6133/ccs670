Outputs:
  ClusterHostedZone:
    Description: Id of the private hosted zone created within the cluster
    Value:
      Ref: Route53HostedZone
  EBSIds:
    Description: EBS Filesystem IDs
    Value: ''
  EFSIds:
    Description: EFS Filesystem IDs
    Value: ''
  FSXIds:
    Description: FSX Filesystem IDs
    Value: ''
  HeadNodeInstanceID:
    Description: ID of the head node instance
    Value:
      Ref: HeadNode
  HeadNodePrivateDnsName:
    Description: Private DNS name of the head node
    Value:
      Fn::GetAtt:
      - HeadNode
      - PrivateDnsName
  HeadNodePrivateIP:
    Description: Private IP Address of the head node
    Value:
      Fn::GetAtt:
      - HeadNode
      - PrivateIp
  RAIDIds:
    Description: RAID Filesystem IDs
    Value: ''
Parameters:
  ArtifactS3RootDirectory:
    Default: parallelcluster/3.6.0/clusters/hpc-cluster-wvryzutj26tgpeor
    Description: Root directory in S3 bucket where cluster artifacts are stored
    Type: String
  AssetParameters8caf765abbce57fef3b36c044323c440f104aaa3e5ad2439bca0d690971e051fArtifactHashE5ADFC2C:
    Description: Artifact hash for asset "8caf765abbce57fef3b36c044323c440f104aaa3e5ad2439bca0d690971e051f"
    Type: String
  AssetParameters8caf765abbce57fef3b36c044323c440f104aaa3e5ad2439bca0d690971e051fS3Bucket855DFAF4:
    Description: S3 bucket for asset "8caf765abbce57fef3b36c044323c440f104aaa3e5ad2439bca0d690971e051f"
    Type: String
  AssetParameters8caf765abbce57fef3b36c044323c440f104aaa3e5ad2439bca0d690971e051fS3VersionKeyC6FB071D:
    Description: S3 key for asset version "8caf765abbce57fef3b36c044323c440f104aaa3e5ad2439bca0d690971e051f"
    Type: String
  ClusterCWLogGroup:
    Default: /aws/parallelcluster/hpc-cluster-202308020220
    Description: CloudWatch Log Group associated to the cluster
    Type: String
  ClusterDNSDomain:
    Default: hpc-cluster.pcluster.
    Description: DNS Domain of the private hosted zone created within the cluster
    Type: String
  ClusterUser:
    Default: ec2-user
    Description: Username to login to head node
    Type: String
  ConfigVersion:
    Default: RQnGEIsW6HYBZckcrOJdsS24B6v54OWb
    Description: Version of the original config used to generate the stack
    Type: String
  OfficialAmi:
    Default: ami-0e0432ff9e4f27c7b
    Type: String
  ResourcesS3Bucket:
    Default: parallelcluster-3d5f27789657d0bb-v1-do-not-delete
    Description: S3 user bucket where AWS ParallelCluster resources are stored
    Type: String
  Scheduler:
    Default: slurm
    Type: String
Resources:
  CleanupResourcesFunction:
    Properties:
      Code:
        S3Bucket: parallelcluster-3d5f27789657d0bb-v1-do-not-delete
        S3Key: parallelcluster/3.6.0/clusters/hpc-cluster-wvryzutj26tgpeor/custom_resources/artifacts.zip
      FunctionName:
        Fn::Join:
        - ''
        - - pcluster-CleanupResources-
          - Fn::Select:
            - 2
            - Fn::Split:
              - /
              - Ref: AWS::StackId
      Handler: cleanup_resources.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - CleanupResourcesFunctionExecutionRole
        - Arn
      Runtime: python3.9
      Timeout: 900
    Type: AWS::Lambda::Function
  CleanupResourcesFunctionExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /parallelcluster/
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:DeleteObject
            - s3:DeleteObjectVersion
            - s3:ListBucket
            - s3:ListBucketVersions
            Effect: Allow
            Resource:
            - Fn::Join:
              - ''
              - - 'arn:'
                - Ref: AWS::Partition
                - :s3:::parallelcluster-3d5f27789657d0bb-v1-do-not-delete
            - Fn::Join:
              - ''
              - - 'arn:'
                - Ref: AWS::Partition
                - :s3:::parallelcluster-3d5f27789657d0bb-v1-do-not-delete/parallelcluster/3.6.0/clusters/hpc-cluster-wvryzutj26tgpeor/*
            Sid: S3BucketPolicy
          - Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::Join:
              - ''
              - - 'arn:'
                - Ref: AWS::Partition
                - ':logs:'
                - Ref: AWS::Region
                - ':'
                - Ref: AWS::AccountId
                - :log-group:/aws/lambda/pcluster-CleanupResources-*
            Sid: CloudWatchLogsPolicy
          - Action: ec2:DescribeInstances
            Effect: Allow
            Resource: '*'
            Sid: DescribeInstances
          - Action: ec2:TerminateInstances
            Condition:
              StringEquals:
                ec2:ResourceTag/parallelcluster:cluster-name: hpc-cluster
            Effect: Allow
            Resource: '*'
            Sid: FleetTerminatePolicy
          Version: '2012-10-17'
        PolicyName: LambdaPolicy
    Type: AWS::IAM::Role
  CleanupResourcesFunctionLogGroup:
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Join:
        - ''
        - - /aws/lambda/pcluster-CleanupResources-
          - Fn::Select:
            - 2
            - Fn::Split:
              - /
              - Ref: AWS::StackId
      RetentionInDays: 180
    Type: AWS::Logs::LogGroup
  CleanupResourcesS3BucketCustomResource:
    DeletionPolicy: Delete
    Properties:
      Action: DELETE_S3_ARTIFACTS
      ArtifactS3RootDirectory: parallelcluster/3.6.0/clusters/hpc-cluster-wvryzutj26tgpeor
      ResourcesS3Bucket: parallelcluster-3d5f27789657d0bb-v1-do-not-delete
      ServiceToken:
        Fn::GetAtt:
        - CleanupResourcesFunction
        - Arn
    Type: AWS::CloudFormation::CustomResource
    UpdateReplacePolicy: Delete
  CleanupRoute53CustomResource:
    Properties:
      Action: DELETE_DNS_RECORDS
      ClusterDNSDomain:
        Ref: ClusterDNSDomain
      ClusterHostedZone:
        Ref: Route53HostedZone
      ServiceToken:
        Fn::GetAtt:
        - CleanupRoute53Function
        - Arn
    Type: AWS::CloudFormation::CustomResource
  CleanupRoute53Function:
    Properties:
      Code:
        S3Bucket: parallelcluster-3d5f27789657d0bb-v1-do-not-delete
        S3Key: parallelcluster/3.6.0/clusters/hpc-cluster-wvryzutj26tgpeor/custom_resources/artifacts.zip
      FunctionName:
        Fn::Join:
        - ''
        - - pcluster-CleanupRoute53-
          - Fn::Select:
            - 2
            - Fn::Split:
              - /
              - Ref: AWS::StackId
      Handler: cleanup_resources.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - CleanupRoute53FunctionExecutionRole
        - Arn
      Runtime: python3.9
      Timeout: 900
    Type: AWS::Lambda::Function
  CleanupRoute53FunctionExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /parallelcluster/
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - route53:ListResourceRecordSets
            - route53:ChangeResourceRecordSets
            Effect: Allow
            Resource:
              Fn::Join:
              - ''
              - - 'arn:'
                - Ref: AWS::Partition
                - :route53:::hostedzone/
                - Ref: Route53HostedZone
            Sid: Route53DeletePolicy
          - Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::Join:
              - ''
              - - 'arn:'
                - Ref: AWS::Partition
                - ':logs:'
                - Ref: AWS::Region
                - ':'
                - Ref: AWS::AccountId
                - :log-group:/aws/lambda/pcluster-CleanupRoute53-*
            Sid: CloudWatchLogsPolicy
          Version: '2012-10-17'
        PolicyName: LambdaPolicy
    Type: AWS::IAM::Role
  CleanupRoute53FunctionLogGroup:
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Join:
        - ''
        - - /aws/lambda/pcluster-CleanupRoute53-
          - Fn::Select:
            - 2
            - Fn::Split:
              - /
              - Ref: AWS::StackId
      RetentionInDays: 180
    Type: AWS::Logs::LogGroup
  CloudWatchLogGroup:
    DeletionPolicy: Retain
    Properties:
      LogGroupName: /aws/parallelcluster/hpc-cluster-202308020220
      RetentionInDays: 180
    Type: AWS::Logs::LogGroup
  CloudwatchDashboard88785441:
    Properties:
      DashboardBody:
        Fn::Join:
        - ''
        - - '{"widgets":[{"type":"text","width":24,"height":1,"x":0,"y":0,"properties":{"markdown":"\n#
            Head Node EC2 Metrics\n"}},{"type":"text","width":24,"height":1,"x":0,"y":1,"properties":{"markdown":"\n##
            Head Node Instance Metrics\n"}},{"type":"metric","width":6,"height":6,"x":0,"y":2,"properties":{"view":"timeSeries","title":"CPU
            Utilization","region":"'
          - Ref: AWS::Region
          - '","metrics":[["AWS/EC2","CPUUtilization","InstanceId","'
          - Ref: HeadNode
          - '"]],"yAxis":{}}},{"type":"metric","width":6,"height":6,"x":6,"y":2,"properties":{"view":"timeSeries","title":"Network
            Packets In/Out","region":"'
          - Ref: AWS::Region
          - '","metrics":[["AWS/EC2","NetworkPacketsIn","InstanceId","'
          - Ref: HeadNode
          - '"],["AWS/EC2","NetworkPacketsOut","InstanceId","'
          - Ref: HeadNode
          - '"]],"yAxis":{}}},{"type":"metric","width":6,"height":6,"x":12,"y":2,"properties":{"view":"timeSeries","title":"Network
            In and Out","region":"'
          - Ref: AWS::Region
          - '","metrics":[["AWS/EC2","NetworkIn","InstanceId","'
          - Ref: HeadNode
          - '"],["AWS/EC2","NetworkOut","InstanceId","'
          - Ref: HeadNode
          - '"]],"yAxis":{}}},{"type":"metric","width":6,"height":6,"x":18,"y":2,"properties":{"view":"timeSeries","title":"Disk
            Read/Write Bytes","region":"'
          - Ref: AWS::Region
          - '","metrics":[["AWS/EC2","DiskReadBytes","InstanceId","'
          - Ref: HeadNode
          - '"],["AWS/EC2","DiskWriteBytes","InstanceId","'
          - Ref: HeadNode
          - '"]],"yAxis":{}}},{"type":"metric","width":6,"height":6,"x":0,"y":8,"properties":{"view":"timeSeries","title":"Disk
            Read/Write Ops","region":"'
          - Ref: AWS::Region
          - '","metrics":[["AWS/EC2","DiskReadOps","InstanceId","'
          - Ref: HeadNode
          - '"],["AWS/EC2","DiskWriteOps","InstanceId","'
          - Ref: HeadNode
          - '"]],"yAxis":{}}},{"type":"metric","width":6,"height":6,"x":6,"y":8,"properties":{"view":"timeSeries","title":"Disk
            Used Percent","region":"'
          - Ref: AWS::Region
          - '","metrics":[["CWAgent","disk_used_percent","InstanceId","'
          - Ref: HeadNode
          - '","path","/"]],"yAxis":{}}},{"type":"metric","width":6,"height":6,"x":12,"y":8,"properties":{"view":"timeSeries","title":"Memory
            Used Percent","region":"'
          - Ref: AWS::Region
          - '","metrics":[["CWAgent","mem_used_percent","InstanceId","'
          - Ref: HeadNode
          - '"]],"yAxis":{}}},{"type":"text","width":24,"height":1,"x":0,"y":14,"properties":{"markdown":"\n#
            Cluster Health Metrics\n"}},{"type":"metric","width":6,"height":6,"x":0,"y":15,"properties":{"view":"timeSeries","title":"Instance
            Provisioning Errors","region":"'
          - Ref: AWS::Region
          - '","metrics":[["ParallelCluster","IamPolicyErrors","ClusterName","hpc-cluster",{"period":60,"stat":"Sum"}],["ParallelCluster","VcpuLimitErrors","ClusterName","hpc-cluster",{"period":60,"stat":"Sum"}],["ParallelCluster","VolumeLimitErrors","ClusterName","hpc-cluster",{"period":60,"stat":"Sum"}],["ParallelCluster","InsufficientCapacityErrors","ClusterName","hpc-cluster",{"period":60,"stat":"Sum"}],["ParallelCluster","OtherInstanceLaunchFailures","ClusterName","hpc-cluster",{"period":60,"stat":"Sum"}]],"yAxis":{"left":{"min":0}}}},{"type":"metric","width":6,"height":6,"x":6,"y":15,"properties":{"view":"timeSeries","title":"Unhealthy
            Instance Errors","region":"'
          - Ref: AWS::Region
          - '","metrics":[["ParallelCluster","InstanceBootstrapTimeoutErrors","ClusterName","hpc-cluster",{"period":60,"stat":"Sum"}],["ParallelCluster","EC2HealthCheckErrors","ClusterName","hpc-cluster",{"period":60,"stat":"Sum"}],["ParallelCluster","ScheduledEventHealthCheckErrors","ClusterName","hpc-cluster",{"period":60,"stat":"Sum"}],["ParallelCluster","NoCorrespondingInstanceErrors","ClusterName","hpc-cluster",{"period":60,"stat":"Sum"}],["ParallelCluster","SlurmNodeNotRespondingErrors","ClusterName","hpc-cluster",{"period":60,"stat":"Sum"}]],"yAxis":{"left":{"min":0}}}},{"type":"metric","width":6,"height":6,"x":12,"y":15,"properties":{"view":"timeSeries","title":"Compute
            Fleet Idle Time","region":"'
          - Ref: AWS::Region
          - '","metrics":[["ParallelCluster","MaxDynamicNodeIdleTime","ClusterName","hpc-cluster",{"period":60,"stat":"Maximum"}]],"annotations":{"horizontal":[{"value":600,"color":"#2ca02c","fill":"below","visible":true,"yAxis":"left"},{"value":600,"color":"#1f77b4","fill":"above","label":"Idle
            Time Scaledown","visible":true,"yAxis":"left"}]},"yAxis":{"left":{"min":0}}}},{"type":"text","width":24,"height":1,"x":0,"y":21,"properties":{"markdown":"\nGeneral
            [Troubleshooting Resources](https://docs.aws.amazon.com/parallelcluster/latest/ug/troubleshooting.html)\n"}},{"type":"text","width":24,"height":1,"x":0,"y":22,"properties":{"markdown":"\n#
            Head Node Logs\n"}},{"type":"text","width":24,"height":1,"x":0,"y":23,"properties":{"markdown":"\n##
            ParallelCluster''s logs\n"}},{"type":"log","width":24,"height":6,"x":0,"y":24,"properties":{"view":"table","title":"clustermgtd","region":"'
          - Ref: AWS::Region
          - '","query":"SOURCE ''/aws/parallelcluster/hpc-cluster-202308020220'' |
            fields @timestamp,@message\n| filter @logStream like /'
          - Fn::GetAtt:
            - HeadNode
            - PrivateIp
          - .*clustermgtd/\n| sort @timestamp desc\n| limit 100"}},{"type":"log","width":24,"height":6,"x":0,"y":30,"properties":{"view":"table","title":"slurm_resume","region":"
          - Ref: AWS::Region
          - '","query":"SOURCE ''/aws/parallelcluster/hpc-cluster-202308020220'' |
            fields @timestamp,@message\n| filter @logStream like /'
          - Fn::GetAtt:
            - HeadNode
            - PrivateIp
          - .*slurm_resume/\n| sort @timestamp desc\n| limit 100"}},{"type":"log","width":24,"height":6,"x":0,"y":36,"properties":{"view":"table","title":"slurm_suspend","region":"
          - Ref: AWS::Region
          - '","query":"SOURCE ''/aws/parallelcluster/hpc-cluster-202308020220'' |
            fields @timestamp,@message\n| filter @logStream like /'
          - Fn::GetAtt:
            - HeadNode
            - PrivateIp
          - .*slurm_suspend/\n| sort @timestamp desc\n| limit 100"}},{"type":"text","width":24,"height":1,"x":0,"y":42,"properties":{"markdown":"\n##
            Scheduler's logs\n"}},{"type":"log","width":24,"height":6,"x":0,"y":43,"properties":{"view":"table","title":"slurmctld","region":"
          - Ref: AWS::Region
          - '","query":"SOURCE ''/aws/parallelcluster/hpc-cluster-202308020220'' |
            fields @timestamp,@message\n| filter @logStream like /'
          - Fn::GetAtt:
            - HeadNode
            - PrivateIp
          - .*slurmctld/\n| sort @timestamp desc\n| limit 100"}},{"type":"text","width":24,"height":1,"x":0,"y":49,"properties":{"markdown":"\n##
            System's logs\n"}},{"type":"log","width":24,"height":6,"x":0,"y":50,"properties":{"view":"table","title":"system-messages","region":"
          - Ref: AWS::Region
          - '","query":"SOURCE ''/aws/parallelcluster/hpc-cluster-202308020220'' |
            fields @timestamp,@message\n| filter @logStream like /'
          - Fn::GetAtt:
            - HeadNode
            - PrivateIp
          - .*system-messages/\n| sort @timestamp desc\n| limit 100"}},{"type":"log","width":24,"height":6,"x":0,"y":56,"properties":{"view":"table","title":"cfn-init","region":"
          - Ref: AWS::Region
          - '","query":"SOURCE ''/aws/parallelcluster/hpc-cluster-202308020220'' |
            fields @timestamp,@message\n| filter @logStream like /'
          - Fn::GetAtt:
            - HeadNode
            - PrivateIp
          - .*cfn-init/\n| sort @timestamp desc\n| limit 100"}},{"type":"log","width":24,"height":6,"x":0,"y":62,"properties":{"view":"table","title":"chef-client","region":"
          - Ref: AWS::Region
          - '","query":"SOURCE ''/aws/parallelcluster/hpc-cluster-202308020220'' |
            fields @timestamp,@message\n| filter @logStream like /'
          - Fn::GetAtt:
            - HeadNode
            - PrivateIp
          - .*chef-client/\n| sort @timestamp desc\n| limit 100"}},{"type":"log","width":24,"height":6,"x":0,"y":68,"properties":{"view":"table","title":"cloud-init","region":"
          - Ref: AWS::Region
          - '","query":"SOURCE ''/aws/parallelcluster/hpc-cluster-202308020220'' |
            fields @timestamp,@message\n| filter @logStream like /'
          - Fn::GetAtt:
            - HeadNode
            - PrivateIp
          - .*cloud-init$/\n| sort @timestamp desc\n| limit 100"}},{"type":"log","width":24,"height":6,"x":0,"y":74,"properties":{"view":"table","title":"supervisord","region":"
          - Ref: AWS::Region
          - '","query":"SOURCE ''/aws/parallelcluster/hpc-cluster-202308020220'' |
            fields @timestamp,@message\n| filter @logStream like /'
          - Fn::GetAtt:
            - HeadNode
            - PrivateIp
          - .*supervisord/\n| sort @timestamp desc\n| limit 100"}}]}
      DashboardName:
        Fn::Join:
        - ''
        - - hpc-cluster-
          - Ref: AWS::Region
    Type: AWS::CloudWatch::Dashboard
  ComputeFleetQueuesNestedStackQueuesNestedStackResource4C142E85:
    DeletionPolicy: Delete
    Properties:
      Parameters:
        referencetohpcclusterClusterDNSDomain710E93D5Ref:
          Ref: ClusterDNSDomain
        referencetohpcclusterComputeSecurityGroup15B37206Ref:
          Ref: ComputeSecurityGroup
        referencetohpcclusterHeadNodeENIA979BED3PrimaryPrivateIpAddress:
          Fn::GetAtt:
          - HeadNodeENI
          - PrimaryPrivateIpAddress
        referencetohpcclusterRoute53HostedZoneDED0674ERef:
          Ref: Route53HostedZone
        referencetohpcclusterSlurmDynamoDBTable6D2C9F01Ref:
          Ref: SlurmDynamoDBTable
      TemplateURL:
        Fn::Join:
        - ''
        - - https://s3.
          - Ref: AWS::Region
          - .
          - Ref: AWS::URLSuffix
          - /
          - Ref: AssetParameters8caf765abbce57fef3b36c044323c440f104aaa3e5ad2439bca0d690971e051fS3Bucket855DFAF4
          - /
          - Fn::Select:
            - 0
            - Fn::Split:
              - '||'
              - Ref: AssetParameters8caf765abbce57fef3b36c044323c440f104aaa3e5ad2439bca0d690971e051fS3VersionKeyC6FB071D
          - Fn::Select:
            - 1
            - Fn::Split:
              - '||'
              - Ref: AssetParameters8caf765abbce57fef3b36c044323c440f104aaa3e5ad2439bca0d690971e051fS3VersionKeyC6FB071D
    Type: AWS::CloudFormation::Stack
    UpdateReplacePolicy: Delete
  ComputeFleetTerminateComputeFleetCustomResource9CE1795B:
    DependsOn:
    - ComputeSecurityGroup
    Properties:
      Action: TERMINATE_EC2_INSTANCES
      ServiceToken:
        Fn::GetAtt:
        - CleanupResourcesFunction
        - Arn
      StackName: hpc-cluster
    Type: AWS::CloudFormation::CustomResource
  ComputeSecurityGroup:
    Properties:
      GroupDescription: Allow access to compute nodes
      VpcId: vpc-1bea8673
    Type: AWS::EC2::SecurityGroup
  ComputeSecurityGroupEgress:
    Properties:
      DestinationSecurityGroupId:
        Ref: ComputeSecurityGroup
      FromPort: 0
      GroupId:
        Ref: ComputeSecurityGroup
      IpProtocol: '-1'
      ToPort: 65535
    Type: AWS::EC2::SecurityGroupEgress
  ComputeSecurityGroupHeadNodeIngress0:
    Properties:
      FromPort: 0
      GroupId:
        Ref: ComputeSecurityGroup
      IpProtocol: '-1'
      SourceSecurityGroupId:
        Ref: HeadNodeSecurityGroup
      ToPort: 65535
    Type: AWS::EC2::SecurityGroupIngress
  ComputeSecurityGroupIngress:
    Properties:
      FromPort: 0
      GroupId:
        Ref: ComputeSecurityGroup
      IpProtocol: '-1'
      SourceSecurityGroupId:
        Ref: ComputeSecurityGroup
      ToPort: 65535
    Type: AWS::EC2::SecurityGroupIngress
  ComputeSecurityGroupNormalEgress:
    DependsOn:
    - ComputeSecurityGroupEgress
    Properties:
      CidrIp: 0.0.0.0/0
      FromPort: 0
      GroupId:
        Ref: ComputeSecurityGroup
      IpProtocol: '-1'
      ToPort: 65535
    Type: AWS::EC2::SecurityGroupEgress
  DynamoDBTable:
    DeletionPolicy: Delete
    Properties:
      AttributeDefinitions:
      - AttributeName: Id
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: Id
        KeyType: HASH
      TableName: parallelcluster-hpc-cluster
    Type: AWS::DynamoDB::Table
    UpdateReplacePolicy: Retain
  EC2HealthCheckErrorsFilter:
    DependsOn:
    - CloudWatchLogGroup
    Properties:
      FilterPattern: '{ $.event-type = nodes-failing-health-check-count && $.detail.failure-type
        = ec2_health_check && $.scheduler = "slurm" }'
      LogGroupName: /aws/parallelcluster/hpc-cluster-202308020220
      MetricTransformations:
      - Dimensions:
        - Key: ClusterName
          Value: $.cluster-name
        MetricName: EC2HealthCheckErrors
        MetricNamespace: ParallelCluster
        MetricValue: $.detail.count
        Unit: Count
    Type: AWS::Logs::MetricFilter
  HeadNode:
    DependsOn:
    - CleanupRoute53CustomResource
    - ComputeFleetQueuesNestedStackQueuesNestedStackResource4C142E85
    - ComputeFleetTerminateComputeFleetCustomResource9CE1795B
    Properties:
      LaunchTemplate:
        LaunchTemplateId:
          Ref: HeadNodeLaunchTemplate
        Version:
          Fn::GetAtt:
          - HeadNodeLaunchTemplate
          - LatestVersionNumber
      Tags:
      - Key: Name
        Value: HeadNode
      - Key: parallelcluster-ui
        Value: 'true'
      - Key: parallelcluster:attributes
        Value: alinux2, slurm, 3.6.0, x86_64
      - Key: parallelcluster:cluster-name
        Value: hpc-cluster
      - Key: parallelcluster:filesystem
        Value: efs=0, multiebs=0, raid=0, fsx=0
      - Key: parallelcluster:networking
        Value: EFA=NONE
      - Key: parallelcluster:node-type
        Value: HeadNode
      - Key: parallelcluster:version
        Value: 3.6.0
    Type: AWS::EC2::Instance
  HeadNodeDiskAlarm3749DE06:
    Properties:
      AlarmName: hpc-cluster_DiskAlarm_HeadNode
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 1
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: HeadNode
      - Name: path
        Value: /
      EvaluationPeriods: 1
      MetricName: disk_used_percent
      Namespace: CWAgent
      Period: 60
      Statistic: Maximum
      Threshold: 90
    Type: AWS::CloudWatch::Alarm
  HeadNodeENI:
    Properties:
      Description: AWS ParallelCluster head node interface
      GroupSet:
      - Ref: HeadNodeSecurityGroup
      SourceDestCheck: false
      SubnetId: subnet-02131e4f
    Type: AWS::EC2::NetworkInterface
  HeadNodeLaunchTemplate:
    Metadata:
      AWS::CloudFormation::Init:
        cfnHupConfig:
          files:
            /etc/cfn/cfn-hup.conf:
              content:
                Fn::Sub:
                - '[main]

                  stack=${StackId}

                  region=${Region}

                  url=${CloudFormationUrl}

                  interval=2

                  '
                - CloudFormationUrl: https://cloudformation.us-east-2.amazonaws.com
                  Region:
                    Ref: AWS::Region
                  StackId:
                    Ref: AWS::StackId
              group: root
              mode: '000400'
              owner: root
            /etc/cfn/hooks.d/parallelcluster-update.conf:
              content:
                Fn::Sub:
                - '[parallelcluster-update]

                  triggers=post.update

                  path=Resources.HeadNodeLaunchTemplate.Metadata.AWS::CloudFormation::Init

                  action=PATH=/usr/local/bin:/bin:/usr/bin:/opt/aws/bin; . /etc/profile.d/pcluster.sh;
                  cfn-init -v --stack ${StackName} --resource HeadNodeLaunchTemplate
                  --configsets update --region ${Region} --url ${CloudFormationUrl}

                  runas=root

                  '
                - CloudFormationUrl: https://cloudformation.us-east-2.amazonaws.com
                  Region:
                    Ref: AWS::Region
                  StackName: hpc-cluster
              group: root
              mode: '000400'
              owner: root
        chefConfig:
          commands:
            chef:
              command: cinc-client --local-mode --config /etc/chef/client.rb --log_level
                info --logfile /var/log/chef-client.log --force-formatter --no-color
                --chef-zero-port 8889 --json-attributes /etc/chef/dna.json --override-runlist
                aws-parallelcluster::config
              cwd: /etc/chef
        chefFinalize:
          commands:
            bootstrap:
              command: '[ ! -f /opt/parallelcluster/.bootstrapped ] && echo ${cookbook_version}
                | tee /opt/parallelcluster/.bootstrapped || exit 0'
            chef:
              command: cinc-client --local-mode --config /etc/chef/client.rb --log_level
                info --logfile /var/log/chef-client.log --force-formatter --no-color
                --chef-zero-port 8889 --json-attributes /etc/chef/dna.json --override-runlist
                aws-parallelcluster::finalize
              cwd: /etc/chef
        chefPrepEnv:
          commands:
            chef:
              command: cinc-client --local-mode --config /etc/chef/client.rb --log_level
                info --logfile /var/log/chef-client.log --force-formatter --no-color
                --chef-zero-port 8889 --json-attributes /etc/chef/dna.json --override-runlist
                aws-parallelcluster::init
              cwd: /etc/chef
        chefUpdate:
          commands:
            chef:
              command:
                Fn::Join:
                - ''
                - - '. /etc/profile.d/pcluster.sh; cinc-client --local-mode --config
                    /etc/chef/client.rb --log_level info --logfile /var/log/chef-client.log
                    --force-formatter --no-color --chef-zero-port 8889 --json-attributes
                    /etc/chef/dna.json --override-runlist aws-parallelcluster::update
                    && /opt/parallelcluster/scripts/fetch_and_run -postupdate && cfn-signal
                    --exit-code=0 --reason=''Update complete'' --region '
                  - Ref: AWS::Region
                  - ' --url https://cloudformation.us-east-2.amazonaws.com '''
                  - Ref: HeadNodeWaitConditionHandle20230802022016
                  - ''' || cfn-signal --exit-code=1 --reason=''Update failed'' --region '
                  - Ref: AWS::Region
                  - ' --url https://cloudformation.us-east-2.amazonaws.com '''
                  - Ref: HeadNodeWaitConditionHandle20230802022016
                  - ''''
              cwd: /etc/chef
        configSets:
          default:
          - cfnHupConfig
          - chefPrepEnv
          - shellRunPreInstall
          - chefConfig
          - shellRunPostInstall
          - chefFinalize
          deployFiles:
          - deployConfigFiles
          update:
          - deployConfigFiles
          - chefUpdate
        deployConfigFiles:
          commands:
            jq:
              command: jq --argfile f1 /tmp/dna.json --argfile f2 /tmp/extra.json
                -n '$f1 * $f2' > /etc/chef/dna.json || ( echo "jq not installed";
                cp /tmp/dna.json /etc/chef/dna.json )
            mkdir:
              command: mkdir -p /etc/chef/ohai/hints
            touch:
              command: touch /etc/chef/ohai/hints/ec2.json
          files:
            /etc/chef/client.rb:
              content: cookbook_path ['/etc/chef/cookbooks']
              group: root
              mode: '000644'
              owner: root
            /opt/parallelcluster/shared/launch-templates-config.json:
              content:
                Queues:
                  queue-1:
                    ComputeResources:
                      queue-1-cr-1:
                        LaunchTemplate:
                          Id:
                            Fn::GetAtt:
                            - ComputeFleetQueuesNestedStackQueuesNestedStackResource4C142E85
                            - Outputs.hpcclusterComputeFleetQueuesLaunchTemplate3cc54d2ffc6e9379C4625DA8Ref
                          Version:
                            Fn::GetAtt:
                            - ComputeFleetQueuesNestedStackQueuesNestedStackResource4C142E85
                            - Outputs.hpcclusterComputeFleetQueuesLaunchTemplate3cc54d2ffc6e9379C4625DA8LatestVersionNumber
              group: root
              mode: '000644'
              owner: root
            /tmp/dna.json:
              content:
                Fn::Join:
                - ''
                - - "{\n    \"cluster\": {\n        \"stack_name\": \"hpc-cluster\"\
                    ,\n        \"stack_arn\": \""
                  - Ref: AWS::StackId
                  - "\",\n        \"scheduler_plugin_substack_arn\": \"\",\n     \
                    \   \"raid_vol_ids\": \"\",\n        \"raid_shared_dir\": \"\"\
                    ,\n        \"raid_type\": \"\",\n        \"base_os\": \"alinux2\"\
                    ,\n        \"region\": \""
                  - Ref: AWS::Region
                  - "\",\n        \"efs_fs_ids\": \"\",\n        \"efs_shared_dirs\"\
                    : \"\",\n        \"efs_encryption_in_transits\": \"\",\n     \
                    \   \"efs_iam_authorizations\": \"\",\n        \"fsx_fs_ids\"\
                    : \"\",\n        \"fsx_mount_names\": \"\",\n        \"fsx_dns_names\"\
                    : \"\",\n        \"fsx_volume_junction_paths\": \"\",\n      \
                    \  \"fsx_fs_types\": \"\",\n        \"fsx_shared_dirs\": \"\"\
                    ,\n        \"volume\": \"\",\n        \"scheduler\": \"slurm\"\
                    ,\n        \"ephemeral_dir\": \"/scratch\",\n        \"ebs_shared_dirs\"\
                    : \"\",\n        \"proxy\": \"NONE\",\n        \"node_type\":\
                    \ \"HeadNode\",\n        \"cluster_user\": \"ec2-user\",\n   \
                    \     \"ddb_table\": \""
                  - Ref: DynamoDBTable
                  - "\",\n        \"log_group_name\": \"/aws/parallelcluster/hpc-cluster-202308020220\"\
                    ,\n        \"dcv_enabled\": \"false\",\n        \"dcv_port\":\
                    \ \"NONE\",\n        \"enable_intel_hpc_platform\": \"false\"\
                    ,\n        \"cw_logging_enabled\": \"true\",\n        \"log_rotation_enabled\"\
                    : \"true\",\n        \"cluster_s3_bucket\": \"parallelcluster-3d5f27789657d0bb-v1-do-not-delete\"\
                    ,\n        \"cluster_config_s3_key\": \"parallelcluster/3.6.0/clusters/hpc-cluster-wvryzutj26tgpeor/configs/cluster-config-with-implied-values.yaml\"\
                    ,\n        \"cluster_config_version\": \"hWg.5pu36GpEjnqNTUc6xE31UWSYykr0\"\
                    ,\n        \"change_set_s3_key\": \"parallelcluster/3.6.0/clusters/hpc-cluster-wvryzutj26tgpeor/configs/change-set.json\"\
                    ,\n        \"instance_types_data_s3_key\": \"parallelcluster/3.6.0/clusters/hpc-cluster-wvryzutj26tgpeor/configs/instance-types-data.json\"\
                    ,\n        \"custom_node_package\": \"\",\n        \"custom_awsbatchcli_package\"\
                    : \"\",\n        \"head_node_imds_secured\": \"true\",\n     \
                    \   \"compute_node_bootstrap_timeout\": 1800,\n        \"dns_domain\"\
                    : \""
                  - Ref: ClusterDNSDomain
                  - "\",\n        \"hosted_zone\": \""
                  - Ref: Route53HostedZone
                  - "\",\n        \"slurm_ddb_table\": \""
                  - Ref: SlurmDynamoDBTable
                  - "\",\n        \"use_private_hostname\": \"false\"\n    }\n}"
              encoding: plain
              group: root
              mode: '000644'
              owner: root
            /tmp/extra.json:
              content: '{}'
              group: root
              mode: '000644'
              owner: root
            /tmp/wait_condition_handle.txt:
              content:
                Ref: HeadNodeWaitConditionHandle20230802022016
              group: root
              mode: '000644'
              owner: root
        shellRunPostInstall:
          commands:
            runpostinstall:
              command: /opt/parallelcluster/scripts/fetch_and_run -postinstall
        shellRunPreInstall:
          commands:
            runpreinstall:
              command: /opt/parallelcluster/scripts/fetch_and_run -preinstall
      Comment: AWS ParallelCluster Head Node
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
        - DeviceName: /dev/xvdba
          VirtualName: ephemeral0
        - DeviceName: /dev/xvdbb
          VirtualName: ephemeral1
        - DeviceName: /dev/xvdbc
          VirtualName: ephemeral2
        - DeviceName: /dev/xvdbd
          VirtualName: ephemeral3
        - DeviceName: /dev/xvdbe
          VirtualName: ephemeral4
        - DeviceName: /dev/xvdbf
          VirtualName: ephemeral5
        - DeviceName: /dev/xvdbg
          VirtualName: ephemeral6
        - DeviceName: /dev/xvdbh
          VirtualName: ephemeral7
        - DeviceName: /dev/xvdbi
          VirtualName: ephemeral8
        - DeviceName: /dev/xvdbj
          VirtualName: ephemeral9
        - DeviceName: /dev/xvdbk
          VirtualName: ephemeral10
        - DeviceName: /dev/xvdbl
          VirtualName: ephemeral11
        - DeviceName: /dev/xvdbm
          VirtualName: ephemeral12
        - DeviceName: /dev/xvdbn
          VirtualName: ephemeral13
        - DeviceName: /dev/xvdbo
          VirtualName: ephemeral14
        - DeviceName: /dev/xvdbp
          VirtualName: ephemeral15
        - DeviceName: /dev/xvdbq
          VirtualName: ephemeral16
        - DeviceName: /dev/xvdbr
          VirtualName: ephemeral17
        - DeviceName: /dev/xvdbs
          VirtualName: ephemeral18
        - DeviceName: /dev/xvdbt
          VirtualName: ephemeral19
        - DeviceName: /dev/xvdbu
          VirtualName: ephemeral20
        - DeviceName: /dev/xvdbv
          VirtualName: ephemeral21
        - DeviceName: /dev/xvdbw
          VirtualName: ephemeral22
        - DeviceName: /dev/xvdbx
          VirtualName: ephemeral23
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            Iops: 3000
            Throughput: 125
            VolumeSize: 40
            VolumeType: gp3
        EbsOptimized: true
        IamInstanceProfile:
          Name:
            Ref: InstanceProfileHeadNode
        ImageId: ami-0e0432ff9e4f27c7b
        InstanceType: c5.2xlarge
        KeyName: karla
        MetadataOptions:
          HttpTokens: required
        NetworkInterfaces:
        - DeviceIndex: 0
          NetworkInterfaceId:
            Ref: HeadNodeENI
        TagSpecifications:
        - ResourceType: volume
          Tags:
          - Key: parallelcluster:cluster-name
            Value: hpc-cluster
          - Key: parallelcluster:node-type
            Value: HeadNode
          - Key: parallelcluster-ui
            Value: 'true'
          - Key: parallelcluster:cluster-name
            Value: hpc-cluster
          - Key: parallelcluster:version
            Value: 3.6.0
        UserData:
          Fn::Base64:
            Fn::Sub:
            - "Content-Type: multipart/mixed; boundary=\"==BOUNDARY==\"\nMIME-Version:\
              \ 1.0\n\n--==BOUNDARY==\nContent-Type: text/cloud-boothook; charset=\"\
              us-ascii\"\nMIME-Version: 1.0\n\n#!/bin/bash -x\n\nwhich dnf 2>/dev/null;\
              \ dnf=$?\nwhich yum 2>/dev/null; yum=$?\n\nif [ \"${!dnf}\" == \"0\"\
              \ ]; then\n  echo \"proxy=${DnfProxy}\" >> /etc/dnf/dnf.conf\nelif [\
              \ \"${!yum}\" == \"0\" ]; then\n  echo \"proxy=${YumProxy}\" >> /etc/yum.conf\n\
              else\n  echo \"Not yum system\"\nfi\n\nwhich apt-get && echo \"Acquire::http::Proxy\
              \ \\\"${AptProxy}\\\";\" >> /etc/apt/apt.conf || echo \"Not apt system\"\
              \n\nproxy=${ProxyServer}\nif [ \"${!proxy}\" != \"NONE\" ]; then\n \
              \ proxy_host=$(echo \"${!proxy}\" | awk -F/ '{print $3}' | cut -d: -f1)\n\
              \  proxy_port=$(echo \"${!proxy}\" | awk -F/ '{print $3}' | cut -d:\
              \ -f2)\n  echo -e \"[Boto]\\nproxy = ${!proxy_host}\\nproxy_port = ${!proxy_port}\\\
              n\" >/etc/boto.cfg\n  cat >> /etc/profile.d/proxy.sh <<PROXY\nexport\
              \ http_proxy=\"${!proxy}\"\nexport https_proxy=\"${!proxy}\"\nexport\
              \ no_proxy=\"localhost,127.0.0.1,169.254.169.254\"\nexport HTTP_PROXY=\"\
              ${!proxy}\"\nexport HTTPS_PROXY=\"${!proxy}\"\nexport NO_PROXY=\"localhost,127.0.0.1,169.254.169.254\"\
              \nPROXY\nfi\n\n# Configure Amazon Linux 2 instance running in US isolated\
              \ region.\n. /etc/os-release\nif [[ \"${!ID}${!VERSION_ID}\" == \"amzn2\"\
              \ && \"${AWS::Region}\" == us-iso* ]]; then\n  configuration_script=\"\
              /opt/parallelcluster/scripts/patch-iso-instance.sh\"\n  [ -f ${!configuration_script}\
              \ ] && bash ${!configuration_script}\nfi\n\n--==BOUNDARY==\nContent-Type:\
              \ text/cloud-config; charset=us-ascii\nMIME-Version: 1.0\n\nbootcmd:\n\
              \  # Disable multithreading using logic from https://aws.amazon.com/blogs/compute/disabling-intel-hyper-threading-technology-on-amazon-linux/\n\
              \  # thread_siblings_list contains a comma (,) or dash (-) separated\
              \ list of CPU hardware threads within the same core as cpu\n  # e.g.\
              \ 0-1 or 0,1\n  # cat /sys/devices/system/cpu/cpu*/topology/thread_siblings_list\n\
              \  #     | tr '-' ','       # convert hyphen (-) to comma (,), to account\
              \ that some kernels and CPU architectures use a hyphen instead of a\
              \ comma\n  #     | cut -s -d, -f2-  # split over comma (,) and take\
              \ the right part\n  #     | tr ',' '\\n'      # convert remaining comma\
              \ (,) into new lines\n  #     | sort -un         # sort and unique\n\
              \  - if [ \"${DisableMultiThreadingManually}\" = \"true\" ]; then for\
              \ cpunum in $(cat /sys/devices/system/cpu/cpu*/topology/thread_siblings_list\
              \ | tr '-' ',' | cut -s -d, -f2- | tr ',' '\\n' | sort -un); do echo\
              \ 0 > /sys/devices/system/cpu/cpu$cpunum/online; done; fi\n\npackage_update:\
              \ false\npackage_upgrade: false\nrepo_upgrade: none\n\ndatasource_list:\
              \ [ Ec2, None ]\n\n--==BOUNDARY==\nContent-Type: text/x-shellscript;\
              \ charset=\"us-ascii\"\nMIME-Version: 1.0\n\n#!/bin/bash -x\n\nfunction\
              \ error_exit\n{\n  # wait logs flush before signaling the failure\n\
              \  sleep 10\n  # trim the error message because there is a size limit\
              \ of 4096 bytes for cfn-signal\n  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cloudformation-limits.html\n\
              \  cutoff=$(expr 4096 - $(stat --printf=\"%s\" /tmp/wait_condition_handle.txt))\n\
              \  reason=$(head --bytes=${!cutoff} /var/log/parallelcluster/bootstrap_error_msg\
              \ 2>/dev/null) || reason=\"$1\"\n  cfn-signal --exit-code=1 --reason=\"\
              ${!reason}\" \"${!wait_condition_handle_presigned_url}\" --region ${AWS::Region}\
              \ --url ${CloudFormationUrl}\n  exit 1\n}\nfunction vendor_cookbook\n\
              {\n  mkdir /tmp/cookbooks\n  cd /tmp/cookbooks\n  tar -xzf /etc/chef/aws-parallelcluster-cookbook.tgz\n\
              \  HOME_BAK=\"${!HOME}\"\n  export HOME=\"/tmp\"\n  for d in `ls /tmp/cookbooks`;\
              \ do\n    cd /tmp/cookbooks/$d\n    LANG=en_US.UTF-8 /opt/cinc/embedded/bin/berks\
              \ vendor /etc/chef/cookbooks --delete || error_exit 'Vendoring cookbook\
              \ failed.'\n  done;\n  export HOME=\"${!HOME_BAK}\"\n}\n[ -f /etc/profile.d/proxy.sh\
              \ ] && . /etc/profile.d/proxy.sh\n\n# Configure AWS CLI using the expected\
              \ overrides, if any.\n[ -f /etc/profile.d/aws-cli-default-config.sh\
              \ ] && . /etc/profile.d/aws-cli-default-config.sh\n\n# deploy config\
              \ files\nexport PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/aws/bin\n\
              # Load ParallelCluster environment variables\n[ -f /etc/profile.d/pcluster.sh\
              \ ] && . /etc/profile.d/pcluster.sh\n\ncd /tmp\ncfn-init -s ${AWS::StackName}\
              \ -v -c deployFiles -r HeadNodeLaunchTemplate --region ${AWS::Region}\
              \ --url ${CloudFormationUrl}\nwait_condition_handle_presigned_url=$(cat\
              \ /tmp/wait_condition_handle.txt)\n\ncustom_cookbook=${CustomChefCookbook}\n\
              export _region=${AWS::Region}\ns3_url=${AWS::URLSuffix}\nif [ \"${!custom_cookbook}\"\
              \ != \"NONE\" ]; then\n  if [[ \"${!custom_cookbook}\" =~ ^s3://([^/]*)(.*)\
              \ ]]; then\n    bucket_region=$(aws s3api get-bucket-location --bucket\
              \ ${!BASH_REMATCH[1]} --region ${AWS::Region} | jq -r '.LocationConstraint')\n\
              \    if [[ \"${!bucket_region}\" == null ]]; then\n      bucket_region=\"\
              us-east-1\"\n    fi\n    cookbook_url=$(aws s3 presign \"${!custom_cookbook}\"\
              \ --region \"${!bucket_region}\")\n  else\n    cookbook_url=${!custom_cookbook}\n\
              \  fi\nfi\nexport parallelcluster_version=aws-parallelcluster-${ParallelClusterVersion}\n\
              export cookbook_version=${CookbookVersion}\nexport chef_version=${ChefVersion}\n\
              export berkshelf_version=${BerkshelfVersion}\nif [ -f /opt/parallelcluster/.bootstrapped\
              \ ]; then\n  installed_version=$(cat /opt/parallelcluster/.bootstrapped)\n\
              \  if [ \"${!cookbook_version}\" != \"${!installed_version}\" ]; then\n\
              \    cookbook_version_number=$(echo ${!cookbook_version} | awk -F- '{print\
              \ $NF}')\n    installed_version_number=$(echo ${!installed_version}\
              \ | awk -F- '{print $NF}')\n    error_exit \"This AMI was created with\
              \ ${!installed_version_number}, but is trying to be used with ${!cookbook_version_number}.\
              \ Please either use an AMI created with ${!cookbook_version_number}\
              \ or change your ParallelCluster to ${!installed_version_number}\"\n\
              \  fi\nelse\n  error_exit \"This AMI was not baked by ParallelCluster.\
              \ Please use pcluster build-image command to create an AMI by providing\
              \ your AMI as parent image.\"\nfi\nif [ \"${!custom_cookbook}\" != \"\
              NONE\" ]; then\n  curl --retry 3 -v -L -o /etc/chef/aws-parallelcluster-cookbook.tgz\
              \ ${!cookbook_url}\n  vendor_cookbook\nfi\n\n# Call CloudFormation\n\
              cfn-init -s ${AWS::StackName} -v -c default -r HeadNodeLaunchTemplate\
              \ --region ${AWS::Region} --url ${CloudFormationUrl} || error_exit 'Failed\
              \ to bootstrap the head node. Please check /var/log/cfn-init.log or\
              \ /var/log/chef-client.log in the head node, or check the cfn-init.log\
              \ or chef-client.log in CloudWatch logs. Please refer to https://docs.aws.amazon.com/parallelcluster/latest/ug/troubleshooting-v3.html#troubleshooting-v3-get-logs\
              \ for more details on ParallelCluster logs.'\ncfn-signal --exit-code=0\
              \ --reason=\"HeadNode setup complete\" \"${!wait_condition_handle_presigned_url}\"\
              \ --region ${AWS::Region} --url ${CloudFormationUrl}\n# End of file\n\
              --==BOUNDARY==\n"
            - AptProxy: 'false'
              BerkshelfVersion: 7.2.0
              ChefVersion: 17.2.29
              CloudFormationUrl: https://cloudformation.us-east-2.amazonaws.com
              CookbookVersion: aws-parallelcluster-cookbook-3.6.0
              CustomChefCookbook: NONE
              DisableMultiThreadingManually: 'false'
              DnfProxy: ''
              ParallelClusterVersion: 3.6.0
              ProxyServer: NONE
              YumProxy: _none_
    Type: AWS::EC2::LaunchTemplate
  HeadNodeMemAlarm7B308961:
    Properties:
      AlarmName: hpc-cluster_MemAlarm_HeadNode
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 1
      Dimensions:
      - Name: InstanceId
        Value:
          Ref: HeadNode
      EvaluationPeriods: 1
      MetricName: mem_used_percent
      Namespace: CWAgent
      Period: 60
      Statistic: Maximum
      Threshold: 90
    Type: AWS::CloudWatch::Alarm
  HeadNodeSecurityGroup:
    Properties:
      GroupDescription: Enable access to the head node
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      VpcId: vpc-1bea8673
    Type: AWS::EC2::SecurityGroup
  HeadNodeSecurityGroupComputeIngress0:
    Properties:
      FromPort: 0
      GroupId:
        Ref: HeadNodeSecurityGroup
      IpProtocol: '-1'
      SourceSecurityGroupId:
        Ref: ComputeSecurityGroup
      ToPort: 65535
    Type: AWS::EC2::SecurityGroupIngress
  HeadNodeWaitCondition20230802022016:
    Properties:
      Count: 1
      Handle:
        Ref: HeadNodeWaitConditionHandle20230802022016
      Timeout: '1800'
    Type: AWS::CloudFormation::WaitCondition
  HeadNodeWaitConditionHandle20230802022016:
    Type: AWS::CloudFormation::WaitConditionHandle
  IamPolicyErrorsFilter:
    DependsOn:
    - CloudWatchLogGroup
    Properties:
      FilterPattern: '{ $.event-type = node-launch-failure-count && $.detail.failure-type
        = iam-policy-errors && $.scheduler = "slurm" }'
      LogGroupName: /aws/parallelcluster/hpc-cluster-202308020220
      MetricTransformations:
      - Dimensions:
        - Key: ClusterName
          Value: $.cluster-name
        MetricName: IamPolicyErrors
        MetricNamespace: ParallelCluster
        MetricValue: $.detail.count
        Unit: Count
    Type: AWS::Logs::MetricFilter
  InstanceBootstrapTimeoutErrorsFilter:
    DependsOn:
    - CloudWatchLogGroup
    Properties:
      FilterPattern: '{ $.event-type = "protected-mode-error-count" && ($.detail.failure-type
        = "static-replacement-timeout-error" || $.detail.failure-type = "dynamic-resume-timeout-error"
        ) && $.scheduler = "slurm" }'
      LogGroupName: /aws/parallelcluster/hpc-cluster-202308020220
      MetricTransformations:
      - Dimensions:
        - Key: ClusterName
          Value: $.cluster-name
        MetricName: InstanceBootstrapTimeoutErrors
        MetricNamespace: ParallelCluster
        MetricValue: $.detail.count
        Unit: Count
    Type: AWS::Logs::MetricFilter
  InstanceProfileHeadNode:
    Properties:
      Path: /parallelcluster/hpc-cluster/
      Roles:
      - Ref: RoleHeadNode
    Type: AWS::IAM::InstanceProfile
  InsufficientCapacityErrorsFilter:
    DependsOn:
    - CloudWatchLogGroup
    Properties:
      FilterPattern: '{ $.event-type = node-launch-failure-count && $.detail.failure-type
        = ice-failures && $.scheduler = "slurm" }'
      LogGroupName: /aws/parallelcluster/hpc-cluster-202308020220
      MetricTransformations:
      - Dimensions:
        - Key: ClusterName
          Value: $.cluster-name
        MetricName: InsufficientCapacityErrors
        MetricNamespace: ParallelCluster
        MetricValue: $.detail.count
        Unit: Count
    Type: AWS::Logs::MetricFilter
  MaxDynamicNodeIdleTimeFilter:
    DependsOn:
    - CloudWatchLogGroup
    Properties:
      FilterPattern: '{ $.event-type = "compute-node-idle-time" && $.scheduler = "slurm"
        && $.detail.node-type = "dynamic"}'
      LogGroupName: /aws/parallelcluster/hpc-cluster-202308020220
      MetricTransformations:
      - Dimensions:
        - Key: ClusterName
          Value: $.cluster-name
        MetricName: MaxDynamicNodeIdleTime
        MetricNamespace: ParallelCluster
        MetricValue: $.detail.longest-idle-time
        Unit: Seconds
    Type: AWS::Logs::MetricFilter
  NoCorrespondingInstanceErrorsFilter:
    DependsOn:
    - CloudWatchLogGroup
    Properties:
      FilterPattern: '{ $.event-type = invalid-backing-instance-count && $.scheduler
        = "slurm" }'
      LogGroupName: /aws/parallelcluster/hpc-cluster-202308020220
      MetricTransformations:
      - Dimensions:
        - Key: ClusterName
          Value: $.cluster-name
        MetricName: NoCorrespondingInstanceErrors
        MetricNamespace: ParallelCluster
        MetricValue: $.detail.count
        Unit: Count
    Type: AWS::Logs::MetricFilter
  OtherInstanceLaunchFailuresFilter:
    DependsOn:
    - CloudWatchLogGroup
    Properties:
      FilterPattern: '{ $.event-type = node-launch-failure-count && $.detail.failure-type
        = other-failures && $.scheduler = "slurm" }'
      LogGroupName: /aws/parallelcluster/hpc-cluster-202308020220
      MetricTransformations:
      - Dimensions:
        - Key: ClusterName
          Value: $.cluster-name
        MetricName: OtherInstanceLaunchFailures
        MetricNamespace: ParallelCluster
        MetricValue: $.detail.count
        Unit: Count
    Type: AWS::Logs::MetricFilter
  ParallelClusterPoliciesHeadNode:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - ec2:DescribeInstanceAttribute
          - ec2:DescribeInstances
          - ec2:DescribeInstanceStatus
          - ec2:DescribeVolumes
          Effect: Allow
          Resource: '*'
          Sid: Ec2
        - Action:
          - ec2:AttachVolume
          - ec2:CreateTags
          - ec2:DetachVolume
          Effect: Allow
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :instance/*
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :volume/*
          Sid: Ec2TagsAndVolumes
        - Action: s3:GetObject
          Effect: Allow
          Resource:
            Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':s3:::'
              - Ref: AWS::Region
              - -aws-parallelcluster/*
          Sid: S3GetObj
        - Action:
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:GetBucketLocation
          - s3:ListBucket
          Effect: Allow
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - :s3:::parallelcluster-3d5f27789657d0bb-v1-do-not-delete
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - :s3:::parallelcluster-3d5f27789657d0bb-v1-do-not-delete/parallelcluster/3.6.0/clusters/hpc-cluster-wvryzutj26tgpeor/*
          Sid: ResourcesS3Bucket
        - Action:
          - cloudformation:DescribeStacks
          - cloudformation:DescribeStackResource
          - cloudformation:SignalResource
          Effect: Allow
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':cloudformation:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :stack/hpc-cluster/*
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':cloudformation:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :stack/hpc-cluster-*/*
          Sid: CloudFormation
        - Action: s3:GetObject
          Effect: Allow
          Resource:
            Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - :s3:::dcv-license.
              - Ref: AWS::Region
              - /*
          Sid: DcvLicense
        - Action: ec2:TerminateInstances
          Condition:
            StringEquals:
              ec2:ResourceTag/parallelcluster:cluster-name: hpc-cluster
          Effect: Allow
          Resource: '*'
          Sid: EC2Terminate
        - Action:
          - ec2:RunInstances
          - ec2:CreateFleet
          Effect: Allow
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :subnet/subnet-02131e4f
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :fleet/*
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :network-interface/*
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :instance/*
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :volume/*
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :key-pair/karla
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :security-group/*
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :launch-template/*
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :placement-group/*
          - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ::image/ami-0e0432ff9e4f27c7b
          Sid: EC2RunInstancesCreateFleet
        - Action: ec2:DescribeCapacityReservations
          Effect: Allow
          Resource: '*'
          Sid: EC2DescribeCapacityReservations
        - Action: iam:PassRole
          Effect: Allow
          Resource:
            Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::'
              - Ref: AWS::AccountId
              - :role/parallelcluster/hpc-cluster/*
          Sid: PassRole
        - Action:
          - dynamodb:UpdateItem
          - dynamodb:PutItem
          - dynamodb:GetItem
          Effect: Allow
          Resource:
            Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':dynamodb:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :table/parallelcluster-hpc-cluster
          Sid: DynamoDBTable
        - Action: ec2:GetConsoleOutput
          Condition:
            StringEquals:
              aws:ResourceTag/parallelcluster:cluster-name: hpc-cluster
              aws:ResourceTag/parallelcluster:node-type: Compute
              aws:ResourceTag/parallelcluster:queue-name:
              - queue-1
          Effect: Allow
          Resource:
            Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':ec2:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :instance/*
          Sid: EC2GetComputeConsoleOutput
        Version: '2012-10-17'
      PolicyName: parallelcluster
      Roles:
      - Ref: RoleHeadNode
    Type: AWS::IAM::Policy
  ParallelClusterSlurmRoute53Policies:
    Properties:
      PolicyDocument:
        Statement:
        - Action: route53:ChangeResourceRecordSets
          Effect: Allow
          Resource:
            Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - :route53:::hostedzone/
              - Ref: Route53HostedZone
          Sid: Route53Add
        Version: '2012-10-17'
      PolicyName: parallelcluster-slurm-route53
      Roles:
      - Ref: RoleHeadNode
    Type: AWS::IAM::Policy
  RoleHeadNode:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
              Fn::Join:
              - ''
              - - ec2.
                - Ref: AWS::URLSuffix
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Path: /parallelcluster/hpc-cluster/
    Type: AWS::IAM::Role
  Route53HostedZone:
    Properties:
      Name:
        Ref: ClusterDNSDomain
      VPCs:
      - VPCId: vpc-1bea8673
        VPCRegion:
          Ref: AWS::Region
    Type: AWS::Route53::HostedZone
  ScheduledEventHealthCheckErrorsFilter:
    DependsOn:
    - CloudWatchLogGroup
    Properties:
      FilterPattern: '{ $.event-type = nodes-failing-health-check-count && $.detail.failure-type
        = scheduled_event_health_check && $.scheduler = "slurm" }'
      LogGroupName: /aws/parallelcluster/hpc-cluster-202308020220
      MetricTransformations:
      - Dimensions:
        - Key: ClusterName
          Value: $.cluster-name
        MetricName: ScheduledEventHealthCheckErrors
        MetricNamespace: ParallelCluster
        MetricValue: $.detail.count
        Unit: Count
    Type: AWS::Logs::MetricFilter
  SlurmDynamoDBTable:
    DeletionPolicy: Delete
    Properties:
      AttributeDefinitions:
      - AttributeName: Id
        AttributeType: S
      - AttributeName: InstanceId
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
      - IndexName: InstanceId
        KeySchema:
        - AttributeName: InstanceId
          KeyType: HASH
        Projection:
          ProjectionType: ALL
      KeySchema:
      - AttributeName: Id
        KeyType: HASH
      TableName: parallelcluster-slurm-hpc-cluster
    Type: AWS::DynamoDB::Table
    UpdateReplacePolicy: Retain
  SlurmNodeNotRespondingErrorsFilter:
    DependsOn:
    - CloudWatchLogGroup
    Properties:
      FilterPattern: '{ $.event-type = node-not-responding-down-count && $.scheduler
        = "slurm" }'
      LogGroupName: /aws/parallelcluster/hpc-cluster-202308020220
      MetricTransformations:
      - Dimensions:
        - Key: ClusterName
          Value: $.cluster-name
        MetricName: SlurmNodeNotRespondingErrors
        MetricNamespace: ParallelCluster
        MetricValue: $.detail.count
        Unit: Count
    Type: AWS::Logs::MetricFilter
  SlurmPoliciesHeadNode:
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - dynamodb:PutItem
          - dynamodb:BatchWriteItem
          - dynamodb:GetItem
          - dynamodb:BatchGetItem
          Effect: Allow
          Resource:
            Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':dynamodb:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :table/parallelcluster-slurm-hpc-cluster
          Sid: SlurmDynamoDBTable
        Version: '2012-10-17'
      PolicyName: parallelcluster-slurm-head-node
      Roles:
      - Ref: RoleHeadNode
    Type: AWS::IAM::Policy
  VcpuLimitErrorsFilter:
    DependsOn:
    - CloudWatchLogGroup
    Properties:
      FilterPattern: '{ $.event-type = node-launch-failure-count && $.detail.failure-type
        = vcpu-limit-failures && $.scheduler = "slurm" }'
      LogGroupName: /aws/parallelcluster/hpc-cluster-202308020220
      MetricTransformations:
      - Dimensions:
        - Key: ClusterName
          Value: $.cluster-name
        MetricName: VcpuLimitErrors
        MetricNamespace: ParallelCluster
        MetricValue: $.detail.count
        Unit: Count
    Type: AWS::Logs::MetricFilter
  VolumeLimitErrorsFilter:
    DependsOn:
    - CloudWatchLogGroup
    Properties:
      FilterPattern: '{ $.event-type = node-launch-failure-count && $.detail.failure-type
        = volume-limit-failures && $.scheduler = "slurm" }'
      LogGroupName: /aws/parallelcluster/hpc-cluster-202308020220
      MetricTransformations:
      - Dimensions:
        - Key: ClusterName
          Value: $.cluster-name
        MetricName: VolumeLimitErrors
        MetricNamespace: ParallelCluster
        MetricValue: $.detail.count
        Unit: Count
    Type: AWS::Logs::MetricFilter
